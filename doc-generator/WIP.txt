5. Add Support for a Referenced Objects Section

Second Rise will create another section in the output to contain the
definitions of embedded JSON objects that appear in the schema but are
defined externally, under headings matching the object name.

Design / work items:

    * Gather referenced object list while building the Schema section.
    * Items are $ref from another schema file source
    * Items (once reference has been located) are of JSON type “object”
    * Non-object types are simply included in-line and do not apply to this treatment
    * Possible additional rules to be considered, if necessary:
      - Tag items with a (new definition) “treat as external reference” in the supplemental markdown input
      - Detect objects to treat as external by the presence of an “AnyOf” structure on the object.
      - Add reference and HTML link tag (or appropriate text in markdown)
        to descriptions of these objects.  “This object uses a common
        Redfish definition. See <link> for details about this object.”
    * Output new “Common Object Definitions” section
      - Output new section wherever new tag for ‘# Common Objects’ (or
        whatever) appears in Input file.  This would likely appear either
        before or after the main schema section.  Schema Guide (DSP2046)
        will use this section in place of many of the Common Properties
        fragments.
      - Each object should be treated as a schema fragment (no headings,
        etc. so that the input document handles most of the formatting)
    * Object name used as sub-section title
    * Object definition used is the highest-version (newest) definition
    * All supported:
      - Mockup examples,
      - Property details,
      - enumeration support,
      - version and deprecated version
    * Description replacement, supplemental property details read from Supplement file


Possible misses:

 * Oem object: there's nothing there! Probably want to add a "skip" option or something.

 - Mockup examples,
 - version and deprecated version (Done?)
 * Identifier being output twice, probably two versions (Can see what the versions are now)

Questions:

1) OEM object: I see how you've handled this in the current
   documentation. This object meets all the rules for a Referenced
   Object, but it looks mighty silly (heading, description, no
   properties). I think the right thing to do would be to add a way to
   explicitly exclude objects from the Referenced Objects section --
   and you can continue to use the description overrides.

2) Is there a desire to override descriptions here, separately from
   the overrides elsewhere? For example, the description of the Status
   object is: "This type describes the status and health of a resource
   and its children." With no overrides, this would appear as a line
   beneath the heading "Status" in the referenced objects
   section. When Status appears as a property of another object, the
   description would read "This type describes the status and health
   of a resource and its children. See the Status object for details
   on this property." If you override a description, the overriding
   text will appear in both places.
